{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\n\nclass MyDocument extends Document {\n  render() {\n    const lang = this.props.__NEXT_DATA__.props.initialLanguage; // console.warn('='.repeat(100));\n    // console.warn(this.props);\n    // console.warn('this.props.__NEXT_DATA__', this.props.__NEXT_DATA__);\n\n    return __jsx(\"html\", {\n      dir: \"ltr\",\n      lang: lang\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: `user-scalable=no, initial-scale=1, minimum-scale=1, maximum-scale=1, width=device-width height=device-height`\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\"\n    }), __jsx(\"meta\", {\n      name: \"mobile-web-app-capable\",\n      content: \"yes\"\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-title\",\n      content: \"Add to Home\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null), \"lang: \", lang, __jsx(\"br\", null)));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // // Render app and page and get the context of the page with collected side effects.\n  // const sheets = new ServerStyleSheets()\n  // const originalRenderPage = ctx.renderPage\n  //\n  // ctx.renderPage = () =>\n  // \toriginalRenderPage({\n  // \t\tenhanceApp: App => props => sheets.collect(<App {...props} />)\n  // \t})\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps);\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/mark/Documents/htdocs/simple/simple/pages/_document.jsx"],"names":["React","Document","Head","Main","NextScript","MyDocument","render","lang","props","__NEXT_DATA__","initialLanguage","getInitialProps","ctx","initialProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IACCC,IADD,EAECC,IAFD,EAGCC,UAHD,QAIO,eAJP;;AAMA,MAAMC,UAAN,SAAyBJ,QAAzB,CAAkC;AAEjCK,EAAAA,MAAM,GAAG;AAER,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBD,KAAzB,CAA+BE,eAA5C,CAFQ,CAIR;AACA;AAEA;;AAEA,WACC;AAAM,MAAA,GAAG,EAAC,KAAV;AAAgB,MAAA,IAAI,EAAEH;AAAtB,OACK,MAAC,IAAD,QAEH;AAAM,MAAA,OAAO,EAAC;AAAd,MAFG,EAKE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAG;AAFZ,MALF,EAUH;AAAM,MAAA,IAAI,EAAC,8BAAX;AAA0C,MAAA,OAAO,EAAC;AAAlD,MAVG,EAWH;AAAM,MAAA,IAAI,EAAC,wBAAX;AAAoC,MAAA,OAAO,EAAC;AAA5C,MAXG,EAYH;AAAM,MAAA,IAAI,EAAC,4BAAX;AAAwC,MAAA,OAAO,EAAC;AAAhD,MAZG,CADL,EAgBK,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,YAGIA,IAHJ,EAIH,iBAJG,CAhBL,CADD;AAyBA;;AApCgC;;AAuClCF,UAAU,CAACM,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,YAAY,GAAG,MAAMZ,QAAQ,CAACU,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACIC,YADJ;AAKA,CAvCD;;AA0CA,eAAeR,UAAf","sourcesContent":["import React from 'react'\nimport Document, {\n\tHead,\n\tMain,\n\tNextScript\n} from 'next/document'\n\nclass MyDocument extends Document {\n\n\trender() {\n\n\t\tconst lang = this.props.__NEXT_DATA__.props.initialLanguage\n\n\t\t// console.warn('='.repeat(100));\n\t\t// console.warn(this.props);\n\n\t\t// console.warn('this.props.__NEXT_DATA__', this.props.__NEXT_DATA__);\n\n\t\treturn (\n\t\t\t<html dir=\"ltr\" lang={lang}>\n        <Head>\n\n\t\t\t\t\t<meta charSet=\"utf-8\" />\n\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\n          <meta\n            name=\"viewport\"\n            content={`user-scalable=no, initial-scale=1, minimum-scale=1, maximum-scale=1, width=device-width height=device-height`}\n          />\n\n\t\t\t\t\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t\t\t\t\t<meta name=\"mobile-web-app-capable\" content=\"yes\" />\n\t\t\t\t\t<meta name=\"apple-mobile-web-app-title\" content=\"Add to Home\" />\n\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n\t\t\t\t\tlang: {lang}\n\t\t\t\t\t<br />\n        </body>\n      </html>\n\t\t)\n\t}\n}\n\nMyDocument.getInitialProps = async ctx => {\n\t// Resolution order\n\t//\n\t// On the server:\n\t// 1. app.getInitialProps\n\t// 2. page.getInitialProps\n\t// 3. document.getInitialProps\n\t// 4. app.render\n\t// 5. page.render\n\t// 6. document.render\n\t//\n\t// On the server with error:\n\t// 1. document.getInitialProps\n\t// 2. app.render\n\t// 3. page.render\n\t// 4. document.render\n\t//\n\t// On the client\n\t// 1. app.getInitialProps\n\t// 2. page.getInitialProps\n\t// 3. app.render\n\t// 4. page.render\n\n\t// // Render app and page and get the context of the page with collected side effects.\n\t// const sheets = new ServerStyleSheets()\n\t// const originalRenderPage = ctx.renderPage\n\t//\n\t// ctx.renderPage = () =>\n\t// \toriginalRenderPage({\n\t// \t\tenhanceApp: App => props => sheets.collect(<App {...props} />)\n\t// \t})\n\n\tconst initialProps = await Document.getInitialProps(ctx);\n\n\treturn {\n\t\t...initialProps,\n\t\t// Styles fragment is rendered after the app and page rendering finish.\n\t\t// styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\n\t}\n}\n\n\nexport default MyDocument"]},"metadata":{},"sourceType":"module"}