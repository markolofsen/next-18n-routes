{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../i18n';\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode,\n      t = _ref.t;\n  return __jsx(\"p\", null, \"Sorry :(\", __jsx(\"br\", null), \"statusCode: \", statusCode);\n}; // {statusCode\n// \t? t('error-with-status', { statusCode })\n// \t: t('error-without-status')}\n\n\n_c = Error;\n\nError.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err;\n            statusCode = null;\n\n            if (res) {\n              statusCode = res.statusCode;\n            } else if (err) {\n              statusCode = err.statusCode;\n            }\n\n            return _context.abrupt(\"return\", {\n              namespacesRequired: ['common'],\n              statusCode: statusCode\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nError.defaultProps = {\n  statusCode: null\n};\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Error);\n\nvar _c;\n\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"sources":["/Users/mark/Documents/htdocs/simple/simple/pages/_error.js"],"names":["React","PropTypes","withTranslation","Error","statusCode","t","getInitialProps","res","err","namespacesRequired","defaultProps","propTypes","number","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACCC,eADD,QAEO,SAFP;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MACbC,UADa,QACbA,UADa;AAAA,MAEbC,CAFa,QAEbA,CAFa;AAAA,SAIb,6BAEE,iBAFF,kBAGeD,UAHf,CAJa;AAAA,CAAd,C,CAYA;AACA;AACA;;;KAdMD,K;;AAgBNA,KAAK,CAACG,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,GADuB,SACvBA,GADuB,EAEvBC,GAFuB,SAEvBA,GAFuB;AAInBJ,YAAAA,UAJmB,GAIN,IAJM;;AAKvB,gBAAGG,GAAH,EAAQ;AAENH,cAAAA,UAFM,GAGHG,GAHG,CAENH,UAFM;AAIP,aAJD,MAIO,IAAGI,GAAH,EAAQ;AAEbJ,cAAAA,UAFa,GAGVI,GAHU,CAEbJ,UAFa;AAId;;AAbsB,6CAchB;AACNK,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADd;AAENL,cAAAA,UAAU,EAAVA;AAFM,aAdgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAoBAD,KAAK,CAACO,YAAN,GAAqB;AACpBN,EAAAA,UAAU,EAAE;AADQ,CAArB;AAIAD,KAAK,CAACQ,SAAN,GAAkB;AACjBP,EAAAA,UAAU,EAAEH,SAAS,CAACW,MADL;AAEjBP,EAAAA,CAAC,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AAFD,CAAlB;AAKA,eAAeZ,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n\twithTranslation\n} from '../i18n'\n\nconst Error = ({\n\tstatusCode,\n\tt\n}) => (\n\t<p>\n\t\tSorry :(\n\t\t\t<br />\n\t\t\tstatusCode: {statusCode}\n\n  </p>\n)\n\n// {statusCode\n// \t? t('error-with-status', { statusCode })\n// \t: t('error-without-status')}\n\nError.getInitialProps = async ({\n\tres,\n\terr\n}) => {\n\tlet statusCode = null\n\tif(res) {\n\t\t({\n\t\t\tstatusCode\n\t\t} = res)\n\t} else if(err) {\n\t\t({\n\t\t\tstatusCode\n\t\t} = err)\n\t}\n\treturn {\n\t\tnamespacesRequired: ['common'],\n\t\tstatusCode,\n\t}\n}\n\nError.defaultProps = {\n\tstatusCode: null,\n}\n\nError.propTypes = {\n\tstatusCode: PropTypes.number,\n\tt: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('common')(Error)"]},"metadata":{},"sourceType":"module"}